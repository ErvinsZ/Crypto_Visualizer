{"version":3,"sources":["Layout.js","StateManager.js","components/Navbar.jsx","components/Styles.js","components/ConfirmButton.jsx","components/PageWrapper.jsx","components/Pages/Settings/SelectTile.jsx","components/Pages/Settings/CoinHeaderGrid.jsx","components/CoinImage.jsx","components/Pages/Settings/CoinTile.jsx","components/Pages/Settings/CoinGrid.jsx","components/Search.jsx","components/Pages/Settings/Settings.jsx","components/Content.jsx","components/Pages/Dashboard/PriceTile.jsx","components/Pages/Dashboard/PriceGrid.jsx","components/Pages/Dashboard/CoinSpotlight.jsx","components/Pages/Dashboard/HighchartsConfig.js","components/Pages/Dashboard/ChartSelect.jsx","components/Pages/Dashboard/PriceChart.js","components/Pages/Dashboard/HighchartsTheme.js","components/Pages/Dashboard/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["styled","div","cc","require","setApiKey","process","Context","React","createContext","StateManager","props","addCoin","key","favorites","state","length","push","setState","removeCoin","_","pull","alreadyInFavorites","includes","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","a","coinList","Data","firstVisit","prices","filter","price","Object","keys","historical","results","name","currentFavorite","data","map","ticker","index","moment","subtract","timeInterval","valueOf","USD","promises","units","priceHistorical","toDate","Promise","all","returnData","i","priceFull","priceData","console","warn","confirmFavourites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","symbol","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","savedSettings","cryptoVisData","Provider","this","children","Component","Logo","h1","Navbar","ControlButtonElement","h2","active","css","hidden","ControlButton","Consumer","onClick","purpleBackground","backgroundColor2","subtleBoxShadow","neonBoxShadow","ConfirmButton","button","Tile","CoinSpotlightTile","PriceChartTile","SelectTile","DeleteTile","DisableTile","CoinHeaderGrid","CoinSymbol","DeleteIcon","favoriteSection","str","split","CoinImage","img","spotlight","coin","alt","src","ImageUrl","Hr","hr","clickCoin","coinKey","TileClass","CoinName","Symbol","CoinGrid","displayCoins","filterCoins","slice","getSearchedCoins","CoinTile","SearchGrid","SearchInput","input","handleFilter","debounce","inputValue","setFilterCoins","coinSymbols","coinNames","allStringsToSearch","concat","fuzzyResults","fuzzy","result","string","pickBy","symKey","coinName","style","fontSize","placeholder","onKeyUp","e","target","ActionRow","ActionRowMobile","PageWrapper","Search","JustifyRight","JustifyLeft","TickerPrice","ChangePct","red","numberFormat","number","PriceTileStyled","compact","ChangePercent","CHANGEPCT24HOUR","PriceTile","PRICE","PriceTileCompact","PriceGrid","SpotlightName","title","text","yAxis","xAxis","type","legend","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","responsive","rules","condition","maxWidth","chartOptions","select","ReactHighcharts","Highcharts","setOptions","colors","chart","backgroundColor","linearGradient","x1","y1","x2","y2","stops","borderColor","borderWidth","className","plotBackgroundColor","plotBorderColor","plotBorderWidth","color","font","subtitle","gridLineColor","gridLineWidth","labels","lineColor","tickColor","fontWeight","fontFamily","minorTickInterval","tickWidth","tooltip","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","theme","fill","stroke","rangeSelector","buttonTheme","states","hover","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","ChartSelect","defaultValue","onChange","config","highchartsConfig","ChartGrid","CoinSpotlight","PriceChart","App","Layout","Content","Settings","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sYAEeA,UAAOC,IAAtB,K,8GCCMC,EAAKC,EAAQ,IAEnBD,EAAGE,UADaC,oEAGhB,IAGaC,EAAUC,IAAMC,gBAEhBC,EAAb,kDACI,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAmBVC,QAAU,SAAAC,GACN,IAAIC,EAAS,YAAO,EAAKC,MAAMD,WAC5BA,EAAUE,OA5BC,KA6BVF,EAAUG,KAAKJ,GACf,EAAKK,SAAS,CAACJ,gBAxBL,EA4BlBK,WAAa,SAAAN,GACT,IAAIC,EAAS,YAAO,EAAKC,MAAMD,WAC/B,EAAKI,SAAS,CAACJ,UAAWM,IAAEC,KAAKP,EAAWD,MA9B9B,EAiClBS,mBAAqB,SAAAT,GAAG,OAAIO,IAAEG,SAAS,EAAKR,MAAMD,UAAWD,IAjC3C,EAmClBW,kBAAoB,WAChB,EAAKC,aACL,EAAKC,cACL,EAAKC,mBAtCS,EAyClBF,WAzCkB,sBAyCL,4BAAAG,EAAA,sEACazB,EAAG0B,WADhB,OACLA,EADK,OAC4BC,KACrC,EAAKZ,SAAS,CAACW,aAFN,2CAzCK,EA8ClBH,YA9CkB,sBA8CJ,4BAAAE,EAAA,0DACP,EAAKb,MAAMgB,WADJ,iEAES,EAAKC,SAFd,OAGVA,GADIA,EAFM,QAGMC,QAAO,SAAAC,GAAK,OAAIC,OAAOC,KAAKF,GAAOlB,UACnD,EAAKE,SAAS,CAACc,WAJL,2CA9CI,EAqDlBL,gBArDkB,sBAqDA,8BAAAC,EAAA,0DACX,EAAKb,MAAMgB,WADA,iEAEM,EAAKM,aAFX,OAEVC,EAFU,OAGVD,EAAa,CACb,CACAE,KAAM,EAAKxB,MAAMyB,gBACjBC,KAAMH,EAAQI,KAAI,SAACC,EAAQC,GAAT,MAAmB,CACrCC,MAASC,SAAT,eAAoB,EAAK/B,MAAMgC,aAjExB,GAiEoDH,IAAQI,UACnEL,EAAOM,UAIX,EAAK/B,SAAS,CAACmB,eAZD,2CArDA,EAoElBA,WAAa,WAET,IADA,IAAIa,EAAW,GACPC,EA3EG,GA2EiBA,EAAM,EAAGA,IACjCD,EAASjC,KACLd,EAAGiD,gBACC,EAAKrC,MAAMyB,gBACX,CAAC,OACDK,MAASC,SAAT,eAAoB,EAAK/B,MAAMgC,aAAcI,IAAQE,WAIjE,OAAOC,QAAQC,IAAIL,IA/EL,EAkFlBlB,OAlFkB,sBAkFT,gCAAAJ,EAAA,sDACD4B,EAAa,GACTC,EAAG,EAFN,YAESA,EAAI,EAAK1C,MAAMD,UAAUE,QAFlC,0CAIyBb,EAAGuD,UAAU,EAAK3C,MAAMD,UAAU2C,GAAI,OAJ/D,OAIOE,EAJP,OAKGH,EAAWvC,KAAK0C,GALnB,kDAOGC,QAAQC,KAAK,oBAAb,MAPH,QAE0CJ,IAF1C,gDAUED,GAVF,0DAlFS,EA8FlBM,kBAAoB,WAChB,IAAItB,EAAkB,EAAKzB,MAAMD,UAAU,GAC3C,EAAKI,SAAS,CACVa,YAAW,EACXgC,KAAM,YACNvB,kBACAR,OAAO,KACPK,WAAW,OACZ,WACC,EAAKX,cACL,EAAKC,qBAETqC,aAAaC,QAAQ,YAAaC,KAAKC,UAAU,CAC7CrD,UAAW,EAAKC,MAAMD,UACtB0B,sBA5GU,EAgHlB4B,mBAAqB,SAACC,GAClB,EAAKnD,SAAS,CACVsB,gBAAiB6B,EACjBhC,WAAW,MACZ,EAAKV,iBACRqC,aAAaC,QAAQ,YAAaC,KAAKC,UAAL,2BAC3BD,KAAKI,MAAMN,aAAaO,QAAQ,eADL,IAE9B/B,gBAAiB6B,OAvHP,EAmIlBG,QAAU,SAAAT,GAAI,OAAI,EAAK7C,SAAS,CAAC6C,UAnIf,EAqIlBU,iBAAmB,SAACC,GAAD,OAAmB,EAAKxD,SAAS,CAACwD,mBArInC,EAuIlBC,kBAAoB,SAACC,GACjB,EAAK1D,SAAS,CAAC6B,aAAc6B,EAAOvC,WAAW,MAAM,EAAKV,kBAtI1D,EAAKZ,MAAL,yBACIgD,KAAM,YACNjD,UAAW,CAAC,MAAO,MAAO,OAC1BiC,aAAc,UACX,EAAK8B,iBAJZ,IAKIL,QAAS,EAAKA,QACd5D,QAAS,EAAKA,QACdO,WAAY,EAAKA,WACjBG,mBAAoB,EAAKA,mBACzBwC,kBAAmB,EAAKA,kBACxBW,iBAAkB,EAAKA,iBACvBL,mBAAoB,EAAKA,mBACzBO,kBAAmB,EAAKA,oBAdd,EADtB,4DA6HQ,IAAIG,EAAgBZ,KAAKI,MAAMN,aAAaO,QAAQ,cACpD,OAAIO,EAIG,CAAChE,UAD0BgE,EAA7BhE,UACc0B,gBADesC,EAAnBtC,iBAFL,CAACuB,KAAK,WAAYhC,YAAW,KA/H/C,+BA6IQ,OACI,kBAACxB,EAAQwE,SAAT,CAAkBH,MAASI,KAAKjE,OAC3BiE,KAAKrE,MAAMsE,cA/I5B,GAAkCzE,IAAM0E,W,qyBCRxC,IAAMC,EAAOlF,IAAOmF,GAAV,KAQJC,EAASpF,IAAOC,IAAV,KASNoF,EAAuBrF,IAAOsF,GAAV,KAKxB,SAAA5E,GAAK,OAAEA,EAAM6E,QAAUC,YAAhB,QAIP,SAAA9E,GAAK,OAAIA,EAAM+E,QAAUD,YAAhB,QAKX,SAASE,EAAT,GAA+B,IAAPpD,EAAM,EAANA,KACpB,OACA,kBAAChC,EAAQqF,SAAT,MACK,gBAAE7D,EAAF,EAAEA,WAAYgC,EAAd,EAAcA,KAAMS,EAApB,EAAoBA,QAApB,OACD,kBAACc,EAAD,CACIE,OAAQzB,IAASxB,EACjBsD,QAAS,kBAAKrB,EAAQjC,IACtBmD,OAAQ3D,GAAuB,cAATQ,GAErBA,MAME,iBACX,OAAM,kBAAC8C,EAAD,KACF,kBAACF,EAAD,yBACA,8BACA,kBAACQ,EAAD,CAAeH,QAAM,EAACjD,KAAK,cAC3B,kBAACoD,EAAD,CAAepD,KAAK,eC1CrB,IAAMuD,EAAgB,4BATe,WAU/BC,EAAgB,4BATgB,UAShB,KAKhBC,GAJoB,4BATc,UASd,KAIL,sCAA2D,YAC1EC,EAAa,sC,8gBCf1B,IAAMC,EAAgBjG,IAAOkG,OAAV,IDmBM,oBCJfF,GASK,GALUhG,IAAOC,IAAV,KAKP,WACX,OACI,kBAACK,EAAQqF,SAAT,MACK,gBAAE9B,EAAF,EAAEA,kBAAF,OAEG,kBAACoC,EAAD,CAAeL,QAAS/B,GAAxB,gBC/BD,cAA6B,IAAlBvB,EAAiB,EAAjBA,KAAM0C,EAAW,EAAXA,SAC5B,OAAO,kBAAC1E,EAAQqF,SAAT,MACN,YACG,OADS,EAAV7B,OACcxB,EACF,KAEJ,6BAAM0C,O,uiCCLd,IAAMmB,EAAOnG,IAAOC,IAAV,IACf8F,EACAF,GAOWO,GAAoBpG,IAAOC,IAAV,IAC5B8F,EACAF,GASWQ,GAAiBrG,IAAOC,IAAV,IACzB8F,EACAF,GAQWS,GAAatG,YAAOmG,EAAPnG,CAAH,IAIjBgG,GAIOO,GAAavG,YAAOsG,GAAPtG,CAAH,IHrBE,uCG+BZwG,GAAcxG,YAAOmG,EAAPnG,CAAH,K,gYChDjB,IAAMyG,GAAiBzG,IAAOC,IAAV,MAKdyG,GAAa1G,IAAOC,IAAV,MAIjB0G,GAAa3G,IAAOC,IAAV,KAGdsG,IAMa,eAA0C,IAAhCjE,EAA+B,EAA/BA,KAAM8B,EAAyB,EAAzBA,OAAQwC,EAAiB,EAAjBA,gBAC7BC,EAAMvE,EAAKwE,MAAM,IAAK,GAC5B,OAAO,kBAACL,GAAD,KACH,6BAAMI,GACLD,EACD,kBAACD,GAAD,UACK,kBAACD,GAAD,KAAatC,K,8YCzB1B,IAAM2C,GAAY/G,IAAOgH,IAAV,MAMb,SAAAtG,GAAK,OAAIA,EAAMuG,WAAazB,YAAnB,SAYI,eAA6B,IAAnB0B,EAAkB,EAAlBA,KAAMD,EAAY,EAAZA,UAE3B,OACI,kBAACF,GAAD,CACAE,UAAWA,EACXE,IAAKD,EAAKR,WACVU,IAAG,mCAA8BF,EAAKG,a,qICpB9C,IAAMC,GAAKtH,IAAOuH,GAAV,MAOR,SAASC,GAAUZ,EAAiBa,EAAS9G,EAASO,GAClD,OAAO0F,EAAkB,WACrB1F,EAAWuG,IACX,WACA9G,EAAQ8G,IAID,mBAAsC,IAA5BA,EAA2B,EAA3BA,QAASb,EAAkB,EAAlBA,gBAC9B,OAAO,kBAACtG,EAAQqF,SAAT,MACF,YAA0D,IAAxD/D,EAAuD,EAAvDA,SAAUjB,EAA6C,EAA7CA,QAASO,EAAoC,EAApCA,WAAYG,EAAwB,EAAxBA,mBAC1B6F,EAAOtF,EAAS6F,GAEhBC,EAAYpB,GAOhB,OANGM,EACHc,EAAYnB,GACFlF,EAAmBoG,KAC7BC,EAAYlB,IAGL,kBAACkB,EAAD,CAAW9B,QAAS4B,GAAUZ,EAAiBa,EAAS9G,EAASO,IACpE,kBAAC,GAAD,CAAiB0F,gBAAiBA,EAAiBtE,KAAM4E,EAAKS,SAAUvD,OAAQ8C,EAAKU,SACrF,kBAACN,GAAD,MACA,kBAAC,GAAD,CAAWJ,KAAMA,S,0TChC1B,IAAMW,GAAW7H,IAAOC,IAAV,MAerB,SAAS6H,GAAalG,EAAUgF,EAAiB/F,EAAWkH,GACxD,OAAOnB,EAAkB/F,EAN7B,SAA0Be,EAAU6C,GAChC,OAAOA,GAAiBvC,OAAOC,KAAKsC,IAChCvC,OAAOC,KAAKP,GAAUoG,MAAM,EAAE,KAIGC,CAAiBrG,EAASmG,GAEpD,mBAA6B,IAAnBnB,EAAkB,EAAlBA,gBACrB,OAAO,kBAACtG,EAAQqF,SAAT,MACF,gBAAE/D,EAAF,EAAEA,SAAUf,EAAZ,EAAYA,UAAW4D,EAAvB,EAAuBA,cAAvB,OAA0C,kBAACoD,GAAD,KACtCC,GAAalG,EAAUgF,EAAiB/F,EAAW4D,GAAehC,KAAI,SAAAgF,GAAO,OAC1E,kBAACS,GAAD,CAAUtH,IAAK6G,EAASb,gBAAiBA,EAAiBa,QAASA,Y,siBCpBnF,IAAMU,GAAanI,IAAOC,IAAV,MAQVmI,GAAcpI,IAAOqI,MAAV,KACfvC,ERSuB,oBQQnBwC,GAAenH,IAAEoH,UAAS,SAACC,EAAY5G,EAAU6G,GACnD,IAAIC,EAAcxG,OAAOC,KAAKP,GAC1B+G,EAAYD,EAAYjG,KAAI,SAAA2B,GAAM,OAAIxC,EAASwC,GAAQuD,YACvDiB,EAAqBF,EAAYG,OAAOF,GACxCG,EAAeC,KAAM/G,OAAOwG,EAAYI,EAAoB,IAAInG,KAAI,SAAAuG,GAAM,OAAIA,EAAOC,UAMzFR,EAJoBtH,IAAE+H,OAAOtH,GAAU,SAACoH,EAAQG,GAC5C,IAAIC,EAAWJ,EAAOrB,SACtB,OAAOxG,IAAEG,SAASwH,EAAcK,IAAWhI,IAAEG,SAASwH,EAAcM,SAGzE,KAYY,kBACX,OACA,kBAAC9I,EAAQqF,SAAT,MACK,gBAAEnB,EAAF,EAAEA,iBAAkB5C,EAApB,EAAoBA,SAApB,OACD,kBAACuG,GAAD,KACI,wBAAIkB,MAAO,CAACC,SAAS,UAArB,gBACA,kBAAClB,GAAD,CAAamB,YAAY,wBAAwBC,QAAS,SAACC,GAAD,OAhBtE,SAAqBA,EAAGjF,EAAkB5C,GACtC,IAAI4G,EAAaiB,EAAEC,OAAO/E,MACtB6D,EAIJF,GAAaE,EAAY5G,EAAU4C,GAH/BA,EAAiB,MAaoDuD,CAAY0B,EAAGjF,EAAkB5C,W,gbCvD9G,IAAM+H,GAAY3J,IAAOC,IAAV,MAQT2J,GAAkB5J,IAAOC,IAAV,MAUN,cACX,OAAO,kBAAC4J,EAAD,CAAavH,KAAK,YACrB,iDACA,kBAAC,GAAD,CAAUsE,iBAAe,IACzB,kBAAC+C,GAAD,KACI,kBAACG,GAAD,MACA,kBAAC,EAAD,OAEL,kBAACF,GAAD,KACK,kBAAC,EAAD,MACA,kBAACE,GAAD,OAEL,+EACA,kBAAC,GAAD,QCnCQ,YAASpJ,GACpB,OAAO,kBAACJ,EAAQqF,SAAT,MACF,YAAqC,IAAnC/D,EAAkC,EAAlCA,SAAUG,EAAwB,EAAxBA,OAAQD,EAAgB,EAAhBA,WACjB,OAAIF,EAGAE,GAAeC,EAGZ,6BAAMrB,EAAMsE,UAFR,+CAHA,mD,47BCCvB,IAAM+E,GAAe/J,IAAOC,IAAV,MAIZqH,GAAKtH,IAAOuH,GAAV,MAKFyC,GAAchK,IAAOC,IAAV,MAGXgK,GAAcjK,IAAOC,IAAV,KXGU,kBWCrBiK,GAAYlK,IAAOC,IAAV,MAEb,SAAAS,GAAK,OAAIA,EAAMyJ,KAAO3E,YAAb,SAIL4E,GAAe,SAAAC,GACjB,QAAUA,EAAS,IAAIrC,MAAM,EAAE,IAG7BsC,GAAkBtK,YAAOsG,GAAPtG,CAAH,MACnB,SAAAU,GAAK,OAAIA,EAAM6J,SAAW/E,YAAjB,KXTc,uBWiBvB,SAAA9E,GAAK,OAAIA,EAAM6B,iBAAmBiD,YAAzB,KACTQ,MAIF,SAASwE,GAAT,GAA+B,IAAPhI,EAAM,EAANA,KACpB,OACI,kBAACuH,GAAD,KACI,kBAACG,GAAD,CAAWC,IAAK3H,EAAKiI,gBAAkB,GACtCL,GAAa5H,EAAKiI,iBADnB,MAOZ,SAASC,GAAT,GAAwE,IAApDtG,EAAmD,EAAnDA,OAAQ5B,EAA2C,EAA3CA,KAAMD,EAAqC,EAArCA,gBAAiB4B,EAAoB,EAApBA,mBAC/C,OACI,kBAACmG,GAAD,CAAiB1E,QAASzB,EAAoB5B,gBAAmBA,GAC7D,kBAACkE,GAAD,KACI,6BAAMrC,GACV,kBAACoG,GAAD,CAAehI,KAAMA,KAErB,kBAAC,GAAD,MACA,kBAACyH,GAAD,SACMG,GAAa5H,EAAKmI,SAMpC,SAASC,GAAT,GAA+E,IAApDxG,EAAmD,EAAnDA,OAAQ5B,EAA2C,EAA3CA,KAAMD,EAAqC,EAArCA,gBAAiB4B,EAAoB,EAApBA,mBACtD,OACI,kBAACmG,GAAD,CAAiB1E,QAASzB,EAAoBoG,SAAO,EAAChI,gBAAiBA,GAC/D,kBAACyH,GAAD,KAAc5F,GAClB,kBAACoG,GAAD,CAAehI,KAAMA,IACrB,iCACM4H,GAAa5H,EAAKmI,SAMrB,mBAAyB,IAAf1I,EAAc,EAAdA,MAAOU,EAAO,EAAPA,MACxByB,EAASlC,OAAOC,KAAKF,GAAO,GAC5BO,EAAOP,EAAMmC,GAAN,IACPsD,EAAY/E,EAAQ,EAAI+H,GAAYE,GAC5C,OACI,kBAACtK,EAAQqF,SAAT,MACK,gBAAEpD,EAAF,EAAEA,gBAAiB4B,EAAnB,EAAmBA,mBAAnB,OACD,kBAACuD,EAAD,CACItD,OAAQA,EACR5B,KAAMA,EACND,gBAAiBA,IAAkB6B,EACnCD,mBAAoB,kBAAMA,EAAmBC,U,oPC3FzD,IAAMyG,GAAY7K,IAAOC,IAAV,MAUA,cACX,OACI,kBAACK,EAAQqF,SAAT,MACK,gBAAE5D,EAAF,EAAEA,OAAF,OACG,kBAAC8I,GAAD,KACK9I,EAAOU,KAAI,SAACR,EAAOU,GAAR,OACZ,kBAAC,GAAD,CAAW/B,IAAG,oBAAe+B,GAASA,MAAOA,EAAOV,MAAOA,Y,uICd/E,IAAM6I,GAAgB9K,IAAOsF,GAAV,MAOJ,cACX,OAEI,kBAAChF,EAAQqF,SAAT,MACK,gBAAEpD,EAAF,EAAEA,gBAAiBX,EAAnB,EAAmBA,SAAnB,OACL,kBAACwE,GAAD,KACI,kBAAC0E,GAAD,KAAgBlJ,EAASW,GAAiBoF,UAC1C,kBAAC,GAAD,CAAWV,WAAS,EAACC,KAAMtF,EAASW,UCrBjC,YAASH,GACpB,MAAM,CACF2I,MAAM,CACFC,KAAK,IAEPC,MAAO,CACLF,MAAM,CACFC,KAAK,cAIXE,MAAO,CAACC,KAAM,YAEdC,OAAQ,CACNC,OAAQ,WACRC,MAAO,QACPC,cAAe,UAGjBC,YAAa,CACXC,OAAQ,CACNC,MAAO,CACLC,kBAAkB,GAEpBC,WAAY,OAIhBH,OAAQrJ,EAERyJ,WAAY,CACVC,MAAO,CAAC,CACNC,UAAW,CACTC,SAAU,KAEZC,aAAc,CAEZb,OAAQ,CACNC,OAAQ,aACRC,MAAO,SACPC,cAAe,gB,mKCrClBvL,WAAOkM,OAAtB,KACEpG,EfqBuB,oBgBjBzBqG,KAAgBC,WAAWC,WCRX,CAERC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UACjD,UAAW,UAAW,UAAW,UAAW,UAAW,WAC3DC,MAAO,CACHC,gBAAiB,CACbC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACH,CAAC,EAAG,mBACJ,CAAC,EAAG,kBAGZC,YAAa,UACbC,YAAa,EACbC,UAAW,iBACXC,oBAAqB,0BACrBC,gBAAiB,UACjBC,gBAAiB,GAErBrC,MAAO,CACH1B,MAAO,CACHgE,MAAO,UACPC,KAAM,kDAGdC,SAAU,CACNlE,MAAO,CACHgE,MAAO,UACPC,KAAM,kDAGdpC,MAAO,CACHsC,cAAe,UACfC,cAAe,EACfC,OAAQ,CACJrE,MAAO,CACHgE,MAAO,YAGfM,UAAW,UACXC,UAAW,UACX7C,MAAO,CACH1B,MAAO,CACHgE,MAAO,OACPQ,WAAY,OACZvE,SAAU,OACVwE,WAAY,uCAIxB7C,MAAO,CACHuC,cAAe,UACfE,OAAQ,CACJrE,MAAO,CACHgE,MAAO,YAGfM,UAAW,UACXI,kBAAmB,KACnBH,UAAW,UACXI,UAAW,EACXjD,MAAO,CACH1B,MAAO,CACHgE,MAAO,OACPQ,WAAY,OACZvE,SAAU,OACVwE,WAAY,uCAIxBG,QAAS,CACLzB,gBAAiB,sBACjBnD,MAAO,CACHgE,MAAO,YAGfa,QAAS,CACLC,UAAW,CACPd,MAAO,WAGf7B,YAAa,CACT4C,KAAM,CACFC,WAAY,CACRhB,MAAO,QAEXiB,OAAQ,CACJX,UAAW,SAGnBY,OAAQ,CACJD,OAAQ,CACJX,UAAW,SAGnBa,QAAS,CACLF,OAAQ,CACJX,UAAW,SAGnBc,YAAa,CACTd,UAAW,UAGnBvC,OAAQ,CACJoB,gBAAiB,qBACjB2B,UAAW,CACPb,KAAM,wCACND,MAAO,WAEXqB,eAAgB,CACZrB,MAAO,QAEXsB,gBAAiB,CACbtB,MAAO,QAEXtC,MAAO,CACH1B,MAAO,CACHgE,MAAO,aAInBuB,QAAS,CACLC,SAAS,GAGbnB,OAAQ,CACJrE,MAAO,CACHgE,MAAO,SAGfyB,WAAY,CACRC,cAAe,CACXC,aAAc,UACdC,MAAO,CACHC,KAAM,CACFzC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACH,CAAC,GAAK,WACN,CAAC,GAAK,aAGdqC,OAAQ,aAKpBC,cAAe,CACXC,YAAa,CACTH,KAAM,CACFzC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACH,CAAC,GAAK,QACN,CAAC,GAAK,UAGdqC,OAAQ,UACR9F,MAAO,CACHgE,MAAO,OACPQ,WAAY,QAEhByB,OAAQ,CACJC,MAAO,CACHL,KAAM,CACFzC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACH,CAAC,GAAK,QACN,CAAC,GAAK,UAGdqC,OAAQ,UACR9F,MAAO,CACHgE,MAAO,UAGfnB,OAAQ,CACJgD,KAAM,CACFzC,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACH,CAAC,GAAK,QACN,CAAC,GAAK,UAGdqC,OAAQ,UACR9F,MAAO,CACHgE,MAAO,aAKvBmC,WAAY,CACRhD,gBAAiB,OACjBa,MAAO,UAEXoC,WAAY,CACRpC,MAAO,WAGfqC,UAAW,CACPC,QAAS,CACLnD,gBAAiB,OACjBO,YAAa,QAEjB6C,aAAc,OACdC,SAAU,wBACVpE,OAAQ,CACJ4B,MAAO,UACPM,UAAW,YAGnBmC,UAAW,CACPC,mBAAoB,CAChBtD,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACH,CAAC,GAAK,QACN,CAAC,GAAK,UAGdkD,eAAgB,OAChBC,iBAAkB,OAClBC,sBAAuB,CACnBzD,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACH,CAAC,GAAK,QACN,CAAC,GAAK,UAGdqD,kBAAmB,OACnBC,WAAY,OACZC,qBAAsB,CAClB5D,eAAgB,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC3CC,MAAO,CACH,CAAC,EAAG,QACJ,CAAC,EAAG,UAGZwD,iBAAkB,UDlOf,kBACX,OACI,kBAAChQ,EAAQqF,SAAT,MACK,gBAAEvD,EAAF,EAAEA,WAAYsC,EAAd,EAAcA,kBAAd,OACD,kBAAC2B,GAAD,KACI,kBAACkK,GAAD,CAAaC,aAAa,SAASC,SAAU,SAAAhH,GAAC,OAAI/E,EAAkB+E,EAAEC,OAAO/E,SACzE,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,UAAd,WAEJvC,EAAa,kBAAC,KAAD,CAAiBsO,OAAQC,GAAiBvO,KACrD,kD,6IEdlB,IAAMwO,GAAY5Q,IAAOC,IAAV,MAQA,cACX,OAAO,kBAAC4J,EAAD,CAAavH,KAAK,aACrB,kBAAC,GAAD,MACA,kBAACsO,GAAD,KACA,kBAACC,GAAD,MACA,kBAACC,GAAD,SCGOC,OAdf,WACE,OACE,kBAACC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAACC,GAAD,KACE,kBAACC,GAAD,MACA,kBAACC,GAAD,UCJUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBnC,WACrBA,UAAUoC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzO,QAAQyO,MAAMA,EAAMC,c","file":"static/js/main.a249d47e.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\npadding: 40px;\r\n@media (max-width: 480px) {\r\n    padding: 0\r\n  }\r\n`","import React from 'react'\r\nimport _ from 'lodash'\r\nimport moment from 'moment'\r\nconst cc = require('cryptocompare')\r\nconst API_KEY = process.env.REACT_APP_CRYPTO_KEY\r\ncc.setApiKey(API_KEY)\r\n\r\nconst MAX_FAVORITES = 10\r\nconst TIME_UNITS = 10\r\n\r\nexport const Context = React.createContext()\r\n\r\nexport class StateManager extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            page: 'Dashboard',\r\n            favorites: ['BTC', 'ETH', 'LTC'],\r\n            timeInterval: \"months\",\r\n            ...this.savedSettings(),\r\n            setPage: this.setPage,\r\n            addCoin: this.addCoin,\r\n            removeCoin: this.removeCoin,\r\n            alreadyInFavorites: this.alreadyInFavorites,\r\n            confirmFavourites: this.confirmFavourites,\r\n            setFilteredCoins: this.setFilteredCoins,\r\n            setCurrentFavorite: this.setCurrentFavorite,\r\n            changeChartSelect: this.changeChartSelect,\r\n\r\n\r\n        }\r\n    }\r\n\r\n    addCoin = key => {\r\n        let favorites = [...this.state.favorites]\r\n        if(favorites.length < MAX_FAVORITES) {\r\n            favorites.push(key);\r\n            this.setState({favorites})\r\n        }\r\n    }\r\n\r\n    removeCoin = key => {\r\n        let favorites = [...this.state.favorites]\r\n        this.setState({favorites: _.pull(favorites, key)})\r\n    }\r\n\r\n    alreadyInFavorites = key => _.includes(this.state.favorites, key)\r\n\r\n    componentDidMount = () => {\r\n        this.fetchCoins()\r\n        this.fetchPrices()\r\n        this.fetchHistorical()\r\n    }\r\n\r\n    fetchCoins = async () => {\r\n        let coinList = (await cc.coinList()).Data\r\n        this.setState({coinList})\r\n    }\r\n\r\n    fetchPrices = async() =>{\r\n        if(this.state.firstVisit) return\r\n        let prices = await this.prices()\r\n        prices = prices.filter(price => Object.keys(price).length);\r\n        this.setState({prices});\r\n    }\r\n\r\n    fetchHistorical = async () =>{\r\n        if(this.state.firstVisit) return\r\n        let results = await this.historical()\r\n        let historical = [\r\n            {\r\n            name: this.state.currentFavorite,\r\n            data: results.map((ticker, index) => [\r\n            moment().subtract({[this.state.timeInterval]: TIME_UNITS - index}).valueOf(),\r\n            ticker.USD\r\n         ])\r\n        }\r\n     ]\r\n        this.setState({historical})\r\n    }\r\n\r\n    historical = () => {\r\n        let promises = []\r\n        for(let units = TIME_UNITS; units>0; units--){\r\n            promises.push(\r\n                cc.priceHistorical(\r\n                    this.state.currentFavorite,\r\n                    ['USD'],\r\n                    moment().subtract({[this.state.timeInterval]:units}).toDate()\r\n                )\r\n            )\r\n        }\r\n        return Promise.all(promises)\r\n    }\r\n\r\n    prices = async() =>{\r\n        let returnData = []\r\n        for(let i =0; i < this.state.favorites.length; i++){\r\n            try{\r\n                let priceData = await cc.priceFull(this.state.favorites[i], 'USD')\r\n                returnData.push(priceData)\r\n            } catch(e){\r\n                console.warn('Fetch price error', e)\r\n            }\r\n        }\r\n        return returnData\r\n    }\r\n    confirmFavourites = () => {\r\n        let currentFavorite = this.state.favorites[0]\r\n        this.setState({\r\n            firstVisit:false,\r\n            page: 'Dashboard',\r\n            currentFavorite,\r\n            prices:null,\r\n            historical:null,\r\n        }, () => {\r\n            this.fetchPrices()\r\n            this.fetchHistorical()\r\n        })\r\n        localStorage.setItem('cryptoVis', JSON.stringify({\r\n            favorites: this.state.favorites,\r\n            currentFavorite\r\n        }))\r\n    }\r\n\r\n    setCurrentFavorite = (symbol) => {\r\n        this.setState({\r\n            currentFavorite: symbol,\r\n            historical:null\r\n        }, this.fetchHistorical)\r\n        localStorage.setItem('cryptoVis', JSON.stringify({\r\n            ...JSON.parse(localStorage.getItem('cryptoVis')),\r\n            currentFavorite: symbol\r\n        }))\r\n    }\r\n\r\n    savedSettings(){\r\n        let cryptoVisData = JSON.parse(localStorage.getItem('cryptoVis'));\r\n        if(!cryptoVisData){\r\n            return{page:'Settings', firstVisit:true}\r\n        }\r\n        let {favorites,currentFavorite} = cryptoVisData\r\n        return {favorites, currentFavorite}\r\n    }\r\n    setPage = page => this.setState({page})\r\n\r\n    setFilteredCoins = (filteredCoins) => this.setState({filteredCoins})\r\n\r\n    changeChartSelect = (value) => {\r\n        this.setState({timeInterval: value, historical:null},this.fetchHistorical)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value = {this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\nimport {Context} from '../StateManager'\r\n\r\nconst Logo = styled.h1`\r\n font-size: 2.8em;\r\n @media (max-width: 480px) {\r\n    margin-bottom:25px;\r\n    font-size: 2.5em;\r\n  }\r\n`\r\n\r\nconst Navbar = styled.div`\r\ndisplay: grid;\r\nmargin-bottom:40px;\r\ngrid-template-columns: 100px auto 200px 100px;\r\n@media (max-width: 480px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-columns: 240px 100px;\r\n  }\r\n`\r\nconst ControlButtonElement = styled.h2`\r\ncursor: pointer;\r\nfont-size: 1.5em;\r\nmargin-top:47px;\r\n\r\n${props=>props.active && css`\r\n    text-decoration: underline #76688E;\r\n    color:#AE99BF\r\n`}\r\n${props => props.hidden && css`\r\ndisplay: none;\r\n`}\r\n`\r\n\r\nfunction ControlButton({name}){\r\n    return (\r\n    <Context.Consumer>\r\n        {({firstVisit, page, setPage}) => (\r\n        <ControlButtonElement \r\n            active={page === name}\r\n            onClick={()=> setPage(name)}\r\n            hidden={firstVisit && name === 'Dashboard'}\r\n            >\r\n            {name}\r\n        </ControlButtonElement>\r\n        )}\r\n    </Context.Consumer>\r\n)\r\n}\r\nexport default function(){\r\n    return<Navbar>\r\n        <Logo>CryptoVisualizer</Logo>\r\n        <div></div>\r\n        <ControlButton active name=\"Dashboard\"></ControlButton>\r\n        <ControlButton name=\"Settings\"></ControlButton>\r\n    </Navbar>\r\n}\r\n","const theme = 'dark';\r\n//const theme = 'light';\r\nexport const lightTheme = theme === 'light';\r\n\r\nexport const color = lightTheme ? 'white' : '#ae99bf';\r\nexport const color2 = lightTheme ? 'white' : '#28334e';\r\nexport const color3 = lightTheme ? '#09f010' : '#de9f7a';\r\n\r\nif (lightTheme) {\r\n  document.body.style.background = '#e1eaee';\r\n  document.body.style.color = '#061a44';\r\n}\r\n\r\nexport const purpleBackground = `background-color: ${color}`;\r\nexport const backgroundColor2 = `background-color: ${color2};`;\r\nexport const greenBackgroundColor = `background-color: ${color3};`;\r\n\r\nexport const fontColorGreen = `color: #03A9F4`;\r\nexport const fontColorWhite = `color: white`;\r\nexport const subtleBoxShadow = `box-shadow: 1px 2px 7px 0px ${lightTheme ? '#a9b6ff' : '#000000'}`;\r\nexport const neonBoxShadow = `box-shadow: 0px 0px 4px 2px #de9f7a`;\r\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\r\n\r\nexport const fontSizeBig = 'font-size: 2em';\r\nexport const fontSize1 = 'font-size: 1.5em;';\r\nexport const fontSize2 = 'font-size: 1.0em';\r\nexport const fontSize3 = 'font-size: .75em';\r\n\r\nexport const textAlignCenter = 'text-align: center;';","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Context} from '../StateManager'\r\nimport { color3, fontSize1, neonBoxShadow } from './Styles'\r\n\r\nconst ConfirmButton = styled.button`\r\n    margin: 20px;\r\n    color: white;\r\n    ${fontSize1};\r\n    padding: 5px;\r\n    font-weight: 600;\r\n    background: #4F2B51;\r\n    outline:none;\r\n    width:80%;\r\n    outline:none;\r\n    border:none;\r\n    box-shadow: 1px 2px 7px 0px black;\r\n    border-radius: 15px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        ${neonBoxShadow}\r\n    }\r\n`\r\n\r\nexport const CenterDiv = styled.div`\r\n    display: grid;\r\n    justify-content: center;\r\n    align-items: end;\r\n`\r\nexport default function() {\r\n    return (\r\n        <Context.Consumer>\r\n            {({confirmFavourites}) => \r\n            \r\n                <ConfirmButton onClick={confirmFavourites}>\r\n                    Confirm\r\n                </ConfirmButton>\r\n          \r\n            }\r\n        </Context.Consumer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Context} from '../StateManager'\r\n\r\nexport default function ({name, children}) {\r\n    return <Context.Consumer>\r\n    {({page}) => {\r\n        if (page !== name) {\r\n            return null\r\n        }\r\n        return <div>{children}</div>\r\n    }}\r\n</Context.Consumer>\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {subtleBoxShadow, purpleBackground, neonBoxShadow, redBoxShadow} from '../../Styles'\r\n\r\nexport const Tile = styled.div`\r\n${subtleBoxShadow};\r\n${purpleBackground};\r\nbackground-image: linear-gradient(to right, #4c284e , #af8fb1);\r\nbackground-repeat: no-repeat;\r\nbackground-size:100% 36px;\r\npadding: 10px;\r\nborder-radius:10px;\r\n`\r\nexport const CoinSpotlightTile = styled.div`\r\n${subtleBoxShadow};\r\n${purpleBackground};\r\npadding: 10px;\r\nwidth:92%;\r\nborder-radius:10px;\r\n@media (max-width: 480px) {\r\n    display:none;\r\n  }\r\n`\r\n\r\nexport const PriceChartTile = styled.div`\r\n${subtleBoxShadow};\r\n${purpleBackground};\r\npadding: 10px;\r\nborder-radius:10px;\r\n@media (max-width: 480px) {\r\n    width:340px\r\n  }\r\n`\r\n\r\nexport const SelectTile = styled(Tile)`\r\n&:hover {\r\n    cursor: pointer;\r\n    border-radius:10px;\r\n    ${neonBoxShadow}\r\n}\r\n`\r\n\r\nexport const DeleteTile = styled(SelectTile)`\r\n&:hover{\r\n    cursor: pointer;\r\n    filter: blur(1.5px);\r\n    border-radius:10px;\r\n    backround-color:red;\r\n    ${redBoxShadow}\r\n}\r\n`\r\n\r\nexport const DisableTile = styled(Tile)`\r\npointer-events: none;\r\nborder-radius:10px;\r\nopacity: 0.5;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {DeleteTile} from './SelectTile'\r\n\r\nexport const CoinHeaderGrid = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 1fr 1fr;\r\n`\r\n\r\nexport const CoinSymbol = styled.div`\r\njustify-self: right;\r\n`\r\n\r\nconst DeleteIcon = styled.div`\r\njustify-self: right;\r\ndisplay: none;\r\n${DeleteTile}:hover & {\r\n    display: block;\r\n    color: red;\r\n}\r\n`\r\n\r\nexport default function({name, symbol, favoriteSection}){\r\n    const str = name.split(' ', 2)\r\n    return <CoinHeaderGrid>\r\n        <div>{str}</div>\r\n        {favoriteSection ? (\r\n        <DeleteIcon>X</DeleteIcon>\r\n        ) : (<CoinSymbol>{symbol}</CoinSymbol>)\r\n    }\r\n    </CoinHeaderGrid>\r\n}\r\n","import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\n\r\nconst CoinImage = styled.img`\r\nheight: 50px;\r\nfilter: white;\r\nborder-radius: 50%;\r\nbackground-color: white;\r\nbox-shadow: 1px 2px 7px 0px black;\r\n${props => props.spotlight && css`\r\nheight: 250px;\r\nmargin: auto;\r\ndisplay: block;\r\nborder-radius: 50%;\r\nbackground-color: white;\r\nbox-shadow: 1px 2px 7px 0px black;\r\n\r\n`}\r\n`\r\n\r\n\r\nexport default function({coin, spotlight}) {\r\n   \r\n    return (\r\n        <CoinImage\r\n        spotlight={spotlight}\r\n        alt={coin.CoinSymbol}\r\n        src={`http://cryptocompare.com/${coin.ImageUrl}`}  \r\n\r\n        />\r\n        \r\n    )\r\n    \r\n}\r\n","import React from 'react'\r\nimport {Context} from '../../../StateManager'\r\nimport {SelectTile, DeleteTile, DisableTile} from './SelectTile'\r\nimport CoinHeaderGrid from './CoinHeaderGrid'\r\nimport CoinImage from '../../CoinImage'\r\nimport styled from 'styled-components'\r\n\r\nconst Hr = styled.hr`\r\nbackground-color: transperant;\r\nheight:2px;\r\nborder:none\r\n\r\n`\r\n\r\nfunction clickCoin(favoriteSection, coinKey, addCoin, removeCoin){\r\n    return favoriteSection ? () => {\r\n        removeCoin(coinKey)\r\n    } : () => {\r\n        addCoin(coinKey)\r\n    }\r\n}\r\n\r\nexport default function({coinKey, favoriteSection}) {\r\n    return <Context.Consumer>\r\n        {({coinList, addCoin, removeCoin, alreadyInFavorites}) => {\r\n            let coin = coinList[coinKey]\r\n\r\n            let TileClass = SelectTile;\r\n            if(favoriteSection) {\r\n            TileClass = DeleteTile\r\n            } else if(alreadyInFavorites(coinKey)) {\r\n            TileClass = DisableTile\r\n            }\r\n\r\n            return <TileClass onClick={clickCoin(favoriteSection, coinKey, addCoin, removeCoin)}>\r\n                <CoinHeaderGrid  favoriteSection={favoriteSection} name={coin.CoinName} symbol={coin.Symbol}/>\r\n                <Hr></Hr>\r\n                <CoinImage coin={coin}/>\r\n            </TileClass>\r\n        }}\r\n    </Context.Consumer>\r\n}\r\n","import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\nimport {Context} from '../../../StateManager'\r\nimport CoinTile from './CoinTile'\r\n\r\nexport const CoinGrid = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: repeat(5, minmax(150px, 1fr));\r\ngrid-gap: 25px;\r\nmargin-top: 40px;\r\n@media (max-width: 480px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-columns: repeat(minmax(200px, 1fr));\r\n  }\r\n`\r\nfunction getSearchedCoins(coinList, filteredCoins){\r\n    return filteredCoins && Object.keys(filteredCoins) ||\r\n        Object.keys(coinList).slice(0,100)\r\n\r\n}\r\nfunction displayCoins(coinList, favoriteSection, favorites, filterCoins){\r\n    return favoriteSection ? favorites : getSearchedCoins(coinList,filterCoins)\r\n}\r\nexport default function({favoriteSection}) {\r\n    return <Context.Consumer>\r\n        {({coinList, favorites, filteredCoins}) => <CoinGrid>\r\n            {displayCoins(coinList, favoriteSection, favorites, filteredCoins).map(coinKey =>\r\n                <CoinTile key={coinKey} favoriteSection={favoriteSection} coinKey={coinKey}/>\r\n                )}\r\n            </CoinGrid>}\r\n    </Context.Consumer>\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {backgroundColor2, fontSize2, subtleBoxShadow} from './Styles'\r\nimport {Context} from '../StateManager'\r\nimport _ from 'lodash'\r\nimport fuzzy from 'fuzzy'\r\n\r\nconst SearchGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 250px 1fr;\r\n    @media (max-width: 480px) {\r\n        grid-template-columns: repeat(1, 1fr);\r\n      }\r\n`\r\n\r\nconst SearchInput = styled.input`\r\n${backgroundColor2};\r\n${fontSize2};\r\noutline: none;\r\n::placeholder{\r\n    color: #AE99BF;\r\n    font-size: 1.5em;\r\n}\r\nbackground: transparent;\r\nborder:none;\r\nborder-bottom: #76688E solid;\r\ncolor:#FFEFDB;\r\nheight: 30px;\r\nwidth: 300px;\r\nplace-self: center left\r\n\r\n`\r\n\r\nconst handleFilter = _.debounce((inputValue, coinList, setFilterCoins) => {\r\n    let coinSymbols = Object.keys(coinList)\r\n    let coinNames = coinSymbols.map(symbol => coinList[symbol].CoinName)\r\n    let allStringsToSearch = coinSymbols.concat(coinNames)\r\n    let fuzzyResults = fuzzy.filter(inputValue, allStringsToSearch, {}).map(result => result.string)\r\n\r\n    let filteredCoins = _.pickBy(coinList, (result, symKey)=> {\r\n        let coinName = result.CoinName;\r\n        return(_.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName))\r\n    })\r\n    setFilterCoins(filteredCoins)\r\n}, 500)\r\n\r\nfunction filterCoins(e, setFilteredCoins, coinList){\r\n    let inputValue = e.target.value;\r\n    if(!inputValue){\r\n        setFilteredCoins(null)\r\n        return\r\n    }\r\n    handleFilter(inputValue, coinList, setFilteredCoins)\r\n\r\n}\r\n\r\nexport default function () {\r\n    return (\r\n    <Context.Consumer>\r\n        {({setFilteredCoins, coinList}) =>\r\n        <SearchGrid>\r\n            <h2 style={{fontSize:\"2.2em\"}}>Search coins</h2>\r\n            <SearchInput placeholder=\"Insert coin name here\" onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)}/>\r\n        </SearchGrid>\r\n        }\r\n    </Context.Consumer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ConfirmButton from '../../ConfirmButton'\r\nimport PageWrapper from '../../PageWrapper'\r\nimport CoinGrid from './CoinGrid'\r\nimport Search from '../../Search'\r\nimport styled from 'styled-components'\r\n\r\nconst ActionRow = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: 90% 10%;\r\nmargin-top:40px;\r\n@media (max-width: 480px) {\r\n   display:none;\r\n  }\r\n`\r\nconst ActionRowMobile = styled.div`\r\n@media (max-width: 480px) {\r\ngrid-template-columns: repeat(2, 1fr);\r\ngrid-template-columns: 240px auto 100px;\r\n}\r\n@media (min-width: 480px) {\r\n    display:none;\r\n   }\r\n`\r\n\r\nexport default function() {\r\n    return <PageWrapper name=\"Settings\">\r\n        <h3> Chosen Coin List</h3>\r\n        <CoinGrid favoriteSection/>\r\n        <ActionRow>\r\n            <Search/>\r\n            <ConfirmButton/>\r\n       </ActionRow>\r\n       <ActionRowMobile>\r\n            <ConfirmButton/>\r\n            <Search/>\r\n       </ActionRowMobile>\r\n       <h3>Choose up to 10 coins you would like to analyze</h3>\r\n       <CoinGrid/>\r\n       </PageWrapper>\r\n    \r\n}","import React from 'react'\r\nimport {Context} from '../StateManager'\r\n\r\nexport default function(props){\r\n    return <Context.Consumer>\r\n        {({coinList, prices, firstVisit}) => {\r\n            if(!coinList){\r\n                return <div> Loading Coins</div>\r\n            }\r\n            if(!firstVisit && !prices){\r\n                return <div>Loading Prices</div>\r\n            }\r\n            return <div>{props.children}</div>\r\n        }}\r\n    </Context.Consumer>\r\n}","import React from 'react'\r\nimport styled, {css} from 'styled-components'\r\nimport {SelectTile} from '../Settings/SelectTile'\r\nimport {fontSize3} from '../../Styles'\r\nimport {CoinHeaderGrid} from '../Settings/CoinHeaderGrid'\r\nimport {fontSizeBig, neonBoxShadow} from '../../Styles'\r\nimport {Context} from '../../../StateManager'\r\n\r\nconst JustifyRight = styled.div`\r\njustify-self:right;\r\nfont-size:1.15em;\r\n`\r\nconst Hr = styled.hr`\r\nbackground-color: transperant;\r\nheight:2px;\r\nborder:none\r\n`\r\nconst JustifyLeft = styled.div`\r\njustify-self:left`\r\n\r\nconst TickerPrice = styled.div`\r\n${fontSizeBig};\r\n\r\n`\r\nconst ChangePct = styled.div`\r\ncolor:#4ee64e;\r\n${props => props.red && css`\r\ncolor:#940000;\r\n`}\r\n`\r\nconst numberFormat = number => {\r\n    return + (number + '').slice(0,7)\r\n}\r\n\r\nconst PriceTileStyled = styled(SelectTile)`\r\n${props => props.compact && css`\r\ndisplay:grid;\r\ngrid-template-columns: repeat(3, 1fr);\r\ngrid-gap: 5px;\r\njustify-items: right;\r\n${fontSize3}\r\n`}\r\n\r\n${props => props.currentFavorite && css`\r\n${neonBoxShadow};\r\npointer-events:none;\r\n`}\r\n`\r\nfunction ChangePercent({data}){\r\n    return(\r\n        <JustifyRight>\r\n            <ChangePct red={data.CHANGEPCT24HOUR < 0}>\r\n            {numberFormat(data.CHANGEPCT24HOUR)}% \r\n            </ChangePct>  \r\n        </JustifyRight>\r\n    )\r\n}\r\n\r\nfunction PriceTile({symbol, data, currentFavorite, setCurrentFavorite}){\r\n    return(\r\n        <PriceTileStyled onClick={setCurrentFavorite} currentFavorite = {currentFavorite}>\r\n            <CoinHeaderGrid>\r\n                <div>{symbol}</div>\r\n            <ChangePercent data={data}/>   \r\n            </CoinHeaderGrid>\r\n            <Hr></Hr>\r\n            <TickerPrice>\r\n                ${numberFormat(data.PRICE)}\r\n            </TickerPrice>\r\n        </PriceTileStyled>\r\n    )\r\n}\r\n\r\nfunction PriceTileCompact({symbol, data, currentFavorite, setCurrentFavorite}){\r\n    return(\r\n        <PriceTileStyled onClick={setCurrentFavorite} compact currentFavorite={currentFavorite}> \r\n                <JustifyLeft>{symbol}</JustifyLeft>\r\n            <ChangePercent data={data}/> \r\n            <div>\r\n                ${numberFormat(data.PRICE)}\r\n            </div>\r\n        </PriceTileStyled>\r\n    )\r\n}\r\n\r\nexport default function({price, index}){\r\n    let symbol = Object.keys(price)[0]\r\n    let data = price[symbol]['USD']\r\n    let TileClass = index < 5 ? PriceTile : PriceTileCompact\r\nreturn (\r\n    <Context.Consumer>\r\n        {({currentFavorite, setCurrentFavorite}) => \r\n        <TileClass \r\n            symbol={symbol} \r\n            data={data} \r\n            currentFavorite={currentFavorite===symbol}\r\n            setCurrentFavorite={() => setCurrentFavorite(symbol)}\r\n        >\r\n        </TileClass>\r\n        }\r\n    </Context.Consumer>\r\n)\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Context} from '../../../StateManager'\r\nimport PriceTile from './PriceTile'\r\n\r\nconst PriceGrid = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: repeat(5, 1fr);\r\ngrid-gap: 15px;\r\nmargin-top: 40px;\r\n@media (max-width: 480px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n`\r\nexport default function () {\r\n    return (\r\n        <Context.Consumer>\r\n            {({prices}) => (\r\n                <PriceGrid>\r\n                    {prices.map((price, index) => \r\n                    <PriceTile key={`priceTile-${index}`} index={index} price={price}/>)}\r\n                </PriceGrid>\r\n            )}\r\n        </Context.Consumer>\r\n    )\r\n}","import React from 'react'\r\nimport {CoinSpotlightTile} from '../Settings/SelectTile'\r\nimport {Context} from '../../../StateManager'\r\nimport CoinImage from '../../CoinImage'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst SpotlightName = styled.h2`\r\ntext-align:center;\r\nfont-size: 2.5em;\r\nmargin-bottom: 4vh;\r\n\r\n`\r\n\r\nexport default function(){\r\n    return (\r\n        \r\n        <Context.Consumer>\r\n            {({currentFavorite, coinList}) => \r\n        <CoinSpotlightTile>\r\n            <SpotlightName>{coinList[currentFavorite].CoinName}</SpotlightName> \r\n            <CoinImage spotlight coin={coinList[currentFavorite]}/>\r\n        </CoinSpotlightTile>\r\n         }\r\n        </Context.Consumer>\r\n        \r\n    )\r\n}\r\n","export default function(historical) {\r\n    return{\r\n        title:{\r\n            text:''\r\n        },\r\n          yAxis: {\r\n            title:{\r\n                text:'Price USD'\r\n            }\r\n          },\r\n        \r\n          xAxis: {type: 'datetime'},\r\n        \r\n          legend: {\r\n            layout: 'vertical',\r\n            align: 'right',\r\n            verticalAlign: 'middle'\r\n          },\r\n        \r\n          plotOptions: {\r\n            series: {\r\n              label: {\r\n                connectorAllowed: false\r\n              },\r\n              pointStart: 2010\r\n            }\r\n          },\r\n        \r\n          series: historical,\r\n        \r\n          responsive: {\r\n            rules: [{\r\n              condition: {\r\n                maxWidth: 500\r\n              },\r\n              chartOptions: {\r\n                \r\n                legend: {\r\n                  layout: 'horizontal',\r\n                  align: 'center',\r\n                  verticalAlign: 'bottom',\r\n                }\r\n              }\r\n            }]\r\n          }\r\n        }\r\n    \r\n}","import styled from 'styled-components'\r\nimport {backgroundColor2, fontSize2} from '../../Styles'\r\n\r\nexport default styled.select`\r\n${backgroundColor2};\r\n${fontSize2};\r\ncolor: white;\r\noutline: none;\r\nmargin: 5px;\r\nfloat:right\r\n`;","import highchartsConfig from './HighchartsConfig'\r\nimport React from 'react'\r\nimport {PriceChartTile} from '../Settings/SelectTile'\r\nimport {Context} from '../../../StateManager'\r\nimport ReactHighcharts from 'react-highcharts'\r\nimport HighChartsTheme from './HighchartsTheme'\r\nimport ChartSelect from './ChartSelect'\r\n \r\nReactHighcharts.Highcharts.setOptions(HighChartsTheme)\r\n\r\nexport default function(){\r\n    return (\r\n        <Context.Consumer>\r\n            {({historical, changeChartSelect}) => \r\n            <PriceChartTile>\r\n                <ChartSelect defaultValue=\"months\" onChange={e => changeChartSelect(e.target.value)}>\r\n                    <option value=\"days\">Days</option>\r\n                    <option value=\"weeks\">Weeks</option>\r\n                    <option value=\"months\">Months</option>\r\n                </ChartSelect>\r\n               {historical ? <ReactHighcharts config={highchartsConfig(historical)}/>\r\n                : <div>Loading data</div>\r\n                }\r\n            </PriceChartTile>\r\n            }\r\n        </Context.Consumer>\r\n    ) \r\n}"," export default {\r\n    \r\n        colors: ['#DDDF0D', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee',\r\n            '#ff0066', '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee'],\r\n        chart: {\r\n            backgroundColor: {\r\n                linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },\r\n                stops: [\r\n                    [0, 'rgb(48, 48, 96)'],\r\n                    [1, 'rgb(0, 0, 0)']\r\n                ]\r\n            },\r\n            borderColor: '#000000',\r\n            borderWidth: 2,\r\n            className: 'dark-container',\r\n            plotBackgroundColor: 'rgba(255, 255, 255, .1)',\r\n            plotBorderColor: '#CCCCCC',\r\n            plotBorderWidth: 1\r\n        },\r\n        title: {\r\n            style: {\r\n                color: '#C0C0C0',\r\n                font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\r\n            }\r\n        },\r\n        subtitle: {\r\n            style: {\r\n                color: '#666666',\r\n                font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\r\n            }\r\n        },\r\n        xAxis: {\r\n            gridLineColor: '#333333',\r\n            gridLineWidth: 1,\r\n            labels: {\r\n                style: {\r\n                    color: '#A0A0A0'\r\n                }\r\n            },\r\n            lineColor: '#A0A0A0',\r\n            tickColor: '#A0A0A0',\r\n            title: {\r\n                style: {\r\n                    color: '#CCC',\r\n                    fontWeight: 'bold',\r\n                    fontSize: '12px',\r\n                    fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n                }\r\n            }\r\n        },\r\n        yAxis: {\r\n            gridLineColor: '#333333',\r\n            labels: {\r\n                style: {\r\n                    color: '#A0A0A0'\r\n                }\r\n            },\r\n            lineColor: '#A0A0A0',\r\n            minorTickInterval: null,\r\n            tickColor: '#A0A0A0',\r\n            tickWidth: 1,\r\n            title: {\r\n                style: {\r\n                    color: '#CCC',\r\n                    fontWeight: 'bold',\r\n                    fontSize: '12px',\r\n                    fontFamily: 'Trebuchet MS, Verdana, sans-serif'\r\n                }\r\n            }\r\n        },\r\n        tooltip: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.75)',\r\n            style: {\r\n                color: '#F0F0F0'\r\n            }\r\n        },\r\n        toolbar: {\r\n            itemStyle: {\r\n                color: 'silver'\r\n            }\r\n        },\r\n        plotOptions: {\r\n            line: {\r\n                dataLabels: {\r\n                    color: '#CCC'\r\n                },\r\n                marker: {\r\n                    lineColor: '#333'\r\n                }\r\n            },\r\n            spline: {\r\n                marker: {\r\n                    lineColor: '#333'\r\n                }\r\n            },\r\n            scatter: {\r\n                marker: {\r\n                    lineColor: '#333'\r\n                }\r\n            },\r\n            candlestick: {\r\n                lineColor: 'white'\r\n            }\r\n        },\r\n        legend: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            itemStyle: {\r\n                font: '9pt Trebuchet MS, Verdana, sans-serif',\r\n                color: '#A0A0A0'\r\n            },\r\n            itemHoverStyle: {\r\n                color: '#FFF'\r\n            },\r\n            itemHiddenStyle: {\r\n                color: '#444'\r\n            },\r\n            title: {\r\n                style: {\r\n                    color: '#C0C0C0'\r\n                }\r\n            }\r\n        },\r\n        credits: {\r\n            enabled: false\r\n            \r\n        },\r\n        labels: {\r\n            style: {\r\n                color: '#CCC'\r\n            }\r\n        },\r\n        navigation: {\r\n            buttonOptions: {\r\n                symbolStroke: '#DDDDDD',\r\n                theme: {\r\n                    fill: {\r\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                        stops: [\r\n                            [0.4, '#606060'],\r\n                            [0.6, '#333333']\r\n                        ]\r\n                    },\r\n                    stroke: '#000000'\r\n                }\r\n            }\r\n        },\r\n        \r\n        rangeSelector: {\r\n            buttonTheme: {\r\n                fill: {\r\n                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                    stops: [\r\n                        [0.4, '#888'],\r\n                        [0.6, '#555']\r\n                    ]\r\n                },\r\n                stroke: '#000000',\r\n                style: {\r\n                    color: '#CCC',\r\n                    fontWeight: 'bold'\r\n                },\r\n                states: {\r\n                    hover: {\r\n                        fill: {\r\n                            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                            stops: [\r\n                                [0.4, '#BBB'],\r\n                                [0.6, '#888']\r\n                            ]\r\n                        },\r\n                        stroke: '#000000',\r\n                        style: {\r\n                            color: 'white'\r\n                        }\r\n                    },\r\n                    select: {\r\n                        fill: {\r\n                            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                            stops: [\r\n                                [0.1, '#000'],\r\n                                [0.3, '#333']\r\n                            ]\r\n                        },\r\n                        stroke: '#000000',\r\n                        style: {\r\n                            color: 'yellow'\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            inputStyle: {\r\n                backgroundColor: '#333',\r\n                color: 'silver'\r\n            },\r\n            labelStyle: {\r\n                color: 'silver'\r\n            }\r\n        },\r\n        navigator: {\r\n            handles: {\r\n                backgroundColor: '#666',\r\n                borderColor: '#AAA'\r\n            },\r\n            outlineColor: '#CCC',\r\n            maskFill: 'rgba(16, 16, 16, 0.5)',\r\n            series: {\r\n                color: '#7798BF',\r\n                lineColor: '#A6C7ED'\r\n            }\r\n        },\r\n        scrollbar: {\r\n            barBackgroundColor: {\r\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                stops: [\r\n                    [0.4, '#888'],\r\n                    [0.6, '#555']\r\n                ]\r\n            },\r\n            barBorderColor: '#CCC',\r\n            buttonArrowColor: '#CCC',\r\n            buttonBackgroundColor: {\r\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                stops: [\r\n                    [0.4, '#888'],\r\n                    [0.6, '#555']\r\n                ]\r\n            },\r\n            buttonBorderColor: '#CCC',\r\n            rifleColor: '#FFF',\r\n            trackBackgroundColor: {\r\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n                stops: [\r\n                    [0, '#000'],\r\n                    [1, '#333']\r\n                ]\r\n            },\r\n            trackBorderColor: '#666'\r\n        }\r\n\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PageWrapper from '../../PageWrapper'\r\nimport PriceGrid from './PriceGrid'\r\nimport CoinSpotlight from './CoinSpotlight'\r\nimport PriceChart from './PriceChart'\r\n\r\nconst ChartGrid = styled.div`\r\ndisplay:grid;\r\nmargin-top:20px;\r\ngrid-template-columns: 1fr 4fr;\r\n\r\n`\r\n\r\n\r\nexport default function() {\r\n    return <PageWrapper name=\"Dashboard\">\r\n        <PriceGrid/>\r\n        <ChartGrid>\r\n        <CoinSpotlight/>\r\n        <PriceChart/>\r\n        </ChartGrid>\r\n       </PageWrapper>\r\n    \r\n}","import React from 'react';\nimport './App.css';\nimport Layout from './Layout'\nimport Navbar from './components/Navbar'\nimport {StateManager} from './StateManager'\nimport Settings from './components/Pages/Settings/Settings'\nimport Content from './components/Content'\nimport Dashboard from './components/Pages/Dashboard/Dashboard'\n\nfunction App() {\n  return (\n    <Layout>\n      <StateManager>\n        <Navbar/>\n        <Content>\n          <Settings/> \n          <Dashboard/>\n        </Content>  \n      </StateManager>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}